import com.rameses.rcp.annotations.*
import com.rameses.rcp.common.*
import com.rameses.osiris2.client.*
import com.rameses.osiris2.common.*
import java.rmi.server.*;
import com.rameses.util.*;

public class BusinessAssessmentInfoUtil {
    
    @Caller
    def caller;

    @Service("BusinessBillingService")
    def billSvc;

    @Service("BusinessAssessmentService")
    def assessmentSvc;

    def getEntity() {
        return caller.entity;
    }

    def infoModel = [
        fetchList: { o->
            return entity.assessmentinfos;
        }
    ] as BasicListModel;
            
    def  taxfeeModel = [
        fetchList: { o->
            return entity.taxfees;
        }
    ] as BasicListModel;
            
    def calculate() {
        def e = [:];
        e.putAll( entity );
        return InvokerUtil.lookupOpener( "bpinfoedit:assessment", [
            entity: e, 
            initialInfos: entity.appinfos.collect{it},
            existingInfos: entity.assessmentinfos,
            'query.businessid': entity.business?.objid,
            handler:{ result ->
                entity.assessmentinfos = result.infos?.findAll{ it.infotype == 'assessment' };
                if (!result.taxfees) throw new Exception('No tax fees found ');
                entity.taxfees = result.taxfees;
                entity.totals =  result.totals;
                entity.expirydate = result.expirydate;
                infoModel.reload();
                taxfeeModel.reload();
                caller.binding?.refresh();
            }
        ]);
    }

    boolean analyzer = true;
    def selectedTaxfee;
    def showDetails() {
        if(!selectedTaxfee) 
            throw new Exception("Please select an item");
        return Inv.lookupOpener( "business:billing_details", [entity:selectedTaxfee, analyzer: analyzer] );
    }
    
    void runBill() {
        def result = billSvc.generateBilling( [ billdate: entity.billdate, taxfees: entity.taxfees ] );
        entity.taxfees = result.taxfees;
        entity.totals = result.totals;
        entity.expirydate = result.expirydate;
    }

    void refresh() {
        infoModel.reload();
        taxfeeModel.reload();
    }

    void load() {
        def m = assessmentSvc.getAssessment( caller.entity );
        caller.entity.taxfees = m.taxfees;
        caller.entity.assessmentinfos = m.assessmentinfos;
        caller.entity.totals = m.totals;
    }

}