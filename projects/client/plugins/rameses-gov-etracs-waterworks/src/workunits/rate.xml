<workunit>
    <invokers>
        <invoker type="waterrate:create" caption="Water Rate (New)" action="init" target="popup"/>
        <invoker type="waterrate:open" caption="Water Rate" action="open" target="popup"/>
        <invoker type="formActions" caption="Close" action="_close" immediate="true"/>
        <invoker type="formActions" caption="Save" action="save" visibleWhen="#{mode == 'create'}"/>
        <invoker type="formActions" caption="New" action="create" visibleWhen="#{mode == 'read'}"/>
        <invoker type="formActions" caption="Edit" action="edit" visibleWhen="#{mode == 'read'}"/>
        <invoker type="formActions" caption="Delete" action="delete" visibleWhen="#{mode == 'read'}"/>
        <invoker type="formActions" caption="Update" action="update" visibleWhen="#{mode == 'edit'}"/>
    </invokers>
    
    <code>
        <![CDATA[
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.common.*
        import java.rmi.server.*;
        
        class RateController
        {
            @Service("WaterworksRateService")
            def rateSvc;
        
            def entity;
            def mode;
            def handler;
            
            void init(){
                entity = [:];
                entity.rates = [];
                mode = "create";
            }
            
            void create(){
                init();
                rateModel.reload();
            }
            
            void open(){
                mode = "read";
                if(entity) entity.rates = rateSvc.getRateItems(entity);
            }
            
            void save(){
                if(!MsgBox.confirm('You are about to save this record. Continue?')) return;
                entity.objid = "RT" + new UID().toString();
                rateSvc.create(entity);
                mode = 'read';
                handler();
            }
            
            void edit(){
                mode = 'edit';
            }
            
            def delete(){
                if(!MsgBox.confirm('You are about to delete this record. Continue?')) return;
                rateSvc.delete(entity);
                handler();
                return '_close';
            }
            
            void update(){
                if(!MsgBox.confirm("You are about to update this record. Continue?")) return;
                rateSvc.update(entity);
                mode = 'read';
                handler();
            }
            
            def add(){
                def handler = {o ->
                    entity.rates << o;
                    rateModel.reload();
                }
                return Inv.lookupOpener("waterrate:add",[rates:entity.rates,handler:handler]);
            }
            
            def modify(){
                if(!rate) return;
                def handler = {o ->
                    rate = o;
                    rateModel.reload();
                }
                return Inv.lookupOpener("waterrate:edit",[entity:rate,handler:handler]);
            }
            
            void delete(){
                if(rate) entity.rates.remove(rate);
                rateModel.reload();
            }
            
            def rate;
            def rateModel = [
                fetchList : {
                    return entity.rates;
                }
            ] as BasicListModel;

        }
        ]]>
    </code>
    
    <pages>
        <page template="com.rameses.gov.etracs.waterworks.rates.RatePage"/>
    </pages>
</workunit>