import com.rameses.annotations.*;
import com.rameses.common.*;

class BPApplicationListingReportService {
	
	@Service('NumberService')
	def numSvc;
	
	@ActiveDB("bpreport")
	def em

	@Service("LOVService")
    def LOV;

    @Async
	@ProxyMethod
	public def getReport( params ) { 
		params.filter = '';
		if( params.barangay?.objid ) {
			params.barangayid = params.barangay.objid;
			params.filter = ''' AND ba.barangay_objid = $P{barangayid} ''';
		}
		if( params.classification?.objid ) {
			params.classificationid =  params.classification.objid;
			params.filter += ''' AND l.classification_objid = $P{classificationid} ''';
		}
		if( params.lob?.objid ) {
			params.lobid = params.lob.objid;
			params.filter += ''' AND l.objid = $P{lobid} ''';
		}
		def list = []
		if( params.state_info ) {
			params.state_info = 'INFO'
			list << '''$P{state_info}''';
		}	
		if( params.state_assessment ) {
			params.state_assessment = 'ASSESSMENT'
			list << '''$P{state_assessment}''';
		}	
		if( params.state_payment ) {
			params.state_payment = 'PAYMENT'
			list << '''$P{state_payment}''';
		}
		if( params.state_release ) {
			params.state_release = 'RELEASE'
			list << '''$P{state_release}''';
		}
		if( params.state_completed ) {
			params.state_completed = 'COMPLETED'
			list << '''$P{state_completed}''';
		}
		if(list) params.filter += " AND a.state IN (" + list.join(',') + ")";

		list = [];
		if( params.type_new ) {
			params.type_new = 'NEW'
			list << '''$P{type_new}''';			
		}
		if( params.type_renew ) {
			params.type_renew = 'RENEW'
			list << '''$P{type_renew}''';			
		}
		if( params.type_retire ) {
			params.type_retire = 'RETIRE'
			list << '''$P{type_retire}''';			
		}
		if(list) params.filter += " AND a.apptype IN (" + list.join(',') + ")";

		def zlist = em.getApplicationList( params );
		if( ! zlist ) throw new Exception('No records found.');
		zlist.each { 
			it.capital = (it.capital ? numSvc.round( it.capital ) : 0.0 );
			it.gross = (it.gross ?  numSvc.round( it.gross ) : 0.0 );
		} 
		return zlist;	
	}

	@ProxyMethod
	public def getApplicationStates() {
		return LOV.BUSINESS_APPLICATION_STATES*.key
	}

}