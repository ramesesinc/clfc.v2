import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class RPTReportApproveFaasListingService
{
    @ActiveDB('rptreport_approvefaaslisting')
    def em


    @Service('RPTUtil')
    def util

    @Async
    @ProxyMethod
    public def getApproveFaasListing(params){
    	params.lguid = params.lgu.objid 
    	params.barangayid = (params.barangay ? params.barangay.objid : '%')
        util.buildEndingPeriodFilter(params)
		
        def list = em.getApproveFaasListing(params)
		if ( !list ) throw new Exception('There are no records found.')

        list.each{
            if (it.administrator && it.administrator.name){
                it.owner.name = it.owner.name + '\nAdmin: ' + it.administrator.name 
            }
            if (it.prevadministrator){
                it.prevowner + '\nAdmin: ' + it.prevadministrator 
            }
        }

        def p = [
            PERIOD     : buildPeriod(params),
            FORLGUNAME : params.lgu.lgutype.toUpperCase() + ' OF ' + params.lgu.name 
        ]

		return [
            parameters : p,
            reportdata : list
        ]
    }

    @ProxyMethod
    public def buildPeriod( params ) {
        return util.buildPeriod(params)
    }


}
