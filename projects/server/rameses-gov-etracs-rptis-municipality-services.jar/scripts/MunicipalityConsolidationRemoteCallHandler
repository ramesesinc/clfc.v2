import com.rameses.annotations.*;
import com.rameses.common.*;

class MunicipalityConsolidationRemoteCallHandler
{   
	@Service('ConsolidationService')
	def svc

	@ActiveDB('consolidation_task')
	def taskEm;

	

	public void approveConsolidationByProvince(consolidation){
		def state = null;
		try{
			state = svc.getState( consolidation.objid )
		}
		catch(e){
			e.printStackTrace();
			state = null;
		}

		if (state  && ! state.equalsIgnoreCase('APPROVED')){
			doApproveConsolidation(consolidation)
		}
		println 'Processing consoidation approval by province.'
	}

	private void doApproveConsolidation(consolidation){
		svc.approveConsolidatedLandFaas(consolidation)
		
		svc.getAffectedRpus(consolidation.objid).each{
			svc.approveAffectedRpuFaasRecord(consolidation, it)
		}

		svc.approveConsolidation(consolidation)

		taskEm.removeOpenTask(consolidation)
		consolidation.tasks.each{
			it.data = consolidation
			taskEm.save(it)
			svc.updateSignatories(it)
		}

		svc.insertFaasSignatories(consolidation)
		println 'Consolidation ' + consolidation.txnno + ' has been successfully approved.'
	}
}