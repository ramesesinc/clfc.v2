import com.rameses.annotations.*;
import com.rameses.util.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID;

class WaterworksMeterReadingInterceptor{

	@Service('DateService')
	def dateSvc;

	@ActiveDB(value='waterworks_meter_reading', em="waterworks")
	def reading;

	@Env
	def env;
	
	@Before(pattern="WaterworksMeterReadingService.create")
	public void checkDuplicateReadingEntry(evt){
		def params = evt.args[0];
		params.dtread = dateSvc.getServerDate();
		params.reader = ['objid':env.USERID, 'name':env.NAME];
		def list = reading.getRecordsByDate(params);
		if(list) throw new Exception("Reading record already exists!");
	}

	@Before(pattern="WaterworksMeterReadingService.update")
	public void beforeUpdate(evt){
		def params = evt.args[0];
		params.dtread = dateSvc.getServerDate();
		params.reader = ['objid':env.USERID, 'name':env.NAME];
	}
}